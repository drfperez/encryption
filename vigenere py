def generate_key(message, key):
    key = key.upper()
    key = [c for c in key if c.isalpha()]
    if len(key) == 0:
        raise ValueError("Key must contain alphabetical characters")
    if len(message) > len(key):
        key = key * ((len(message) // len(key)) + 1)
    return "".join(key)[:len(message)]


def encrypt(message, key):
    key = generate_key(message, key)
    result = ""
    for i in range(len(message)):
        char = message[i]
        if char.isalpha():
            temp = chr((ord(char) + ord(key[i])) % 26 + 65)
            result += temp
        else:
            result += char
    return result


def decrypt(message, key):
    key = generate_key(message, key)
    result = ""
    for i in range(len(message)):
        char = message[i]
        if char.isalpha():
            temp = chr((ord(char) - ord(key[i]) + 26) % 26 + 65)
            result += temp
        else:
            result += char
    return result


# Main code
while True:
    print("\nWhat would you like to do?")
    print("1. Encrypt a message")
    print("2. Decrypt a message")
    choice = input("Enter '1' or '2': ")
    if choice not in ['1', '2']:
        print("Invalid choice. Please enter '1' or '2'.")
        continue
    
    message = input("Enter message: ").upper().replace(" ", "")
    key = input("Enter key: ")
    
    try:
        if choice == '1':
            print("Encrypted message: ", encrypt(message, key))
        else:
            print("Decrypted message: ", decrypt(message, key))
    except ValueError as e:
        print("Error: ", str(e))
        continue
    
    response = input("Would you like to continue? (y/n): ")
    if response.lower() != 'y':
        break
